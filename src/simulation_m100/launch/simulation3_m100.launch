<launch>

 <!-- 发布到不同无人机上时修改相应的参数 -->
<arg name="_uav_id" value="3"/><!--无人机id（每台无人机必须不相同）-->
<arg name="_uav_name" value="uav3"/><!--无人机名称（每台无人机必须不相同）-->

<arg name="_uwb_serial_port" value="/dev/uwb_serial_port"/>

<arg name="_gcs_address1" value="tcp://127.0.0.1:5000"/><!--地面站1地址（每台无人机均相同）-->
<arg name="_gcs_address2" value="tcp://127.0.0.1:4000"/><!--地面站2地址（每台无人机均相同）-->
<arg name="_address_to_gcs" value="tcp://*:5003"/><!--本机对地面站的发送地址（实际场景中ip不相同，端口可以相同；仿真场景中ip相同，端口不相同）-->
<arg name="_address_to_uav" value="tcp://*:6003"/><!--本机对其他无人机的发送地址（实际场景中ip不相同，端口可以相同；仿真场景中ip相同，端口不相同）-->

<arg name="_axis_id" value="1"/><!--坐标系：1为全局自然坐标系，2为局部实验坐标系-->

<!--无论使用哪个坐标系，均需要正确设置GPS初始坐标原点，否则无人机将以本机启动时的位置为坐标原点，这将导致无人系统的坐标原点各不相同（除非让无人机在同一个位置启动）-->
<!--//仿真时在gazebo中手动设定家的位置-->
<arg name="_longitude" value="113.415493"/>
<arg name="_latitude" value="23.052475"/>
<arg name="_altitude" value="0.0"/>

<!--//实飞时根据实际场地手动设定家的位置（如果不设置则需要让无人机在同一个位置启动）-->
<!--<arg name="_longitude" value="113.415493"/>
<arg name="_latitude" value="23.052475"/>
<arg name="_altitude" value="-41.237537"/>-->

<!--实验场地坐标系在自然全局坐标系原点以东为正x、以北为正y、北偏东夹角为负（度）-->
<arg name="_offset_x" value="0.0"/>
<arg name="_offset_y" value="0.0"/>
<arg name="_offset_z" value="0.0"/>
<arg name="_offset_angle" value="-37.0"/>

<!--避障距离阈值-->
<arg name="_decelerationArea" value="3.0"/>
<arg name="_stopArea" value="2.0"/>
<arg name="_selfObstacle" value="0.5"/>

<node
pkg = "simulation_m100"
type = "Recv"
name = "Recv_node_$(arg _uav_name)"
output = "screen"
respawn = "true"
launch-prefix= "xterm -e">
<param name="uav_id" type="int" value="$(arg _uav_id)"/>
<param name="uav_name" type="string" value="$(arg _uav_name)"/>
<param name="gcs_address1" type="string" value="$(arg _gcs_address1)"/>
<param name="gcs_address2" type="string" value="$(arg _gcs_address2)"/>
</node>

<node
pkg = "simulation_m100"
type = "Send"
name = "Send_node_$(arg _uav_name)"
output = "screen"
respawn = "true"
launch-prefix= "xterm -e">
<param name="uav_id" type="int" value="$(arg _uav_id)"/>
<param name="uav_name" type="string" value="$(arg _uav_name)"/>
<param name="address_to_gcs" type="string" value="$(arg _address_to_gcs)"/>
<param name="address_to_uav" type="string" value="$(arg _address_to_uav)"/>
<param name="axis_id" type="int" value="$(arg _axis_id)"/>
</node>

<node
pkg = "simulation_m100"
type = "ExeCmd"
name = "ExeCmd_node_$(arg _uav_name)"
output = "screen"
respawn = "true"
launch-prefix= "xterm -e">
<param name="uav_name" type="string" value="$(arg _uav_name)"/>
<param name="axis_id" type="int" value="$(arg _axis_id)"/>
<param name="latitude" type="double" value="$(arg _latitude)"/>
<param name="longitude" type="double" value="$(arg _longitude)"/>
<param name="altitude" type="double" value="$(arg _altitude)"/>
<param name="offset_x" type="double" value="$(arg _offset_x)"/>
<param name="offset_y" type="double" value="$(arg _offset_y)"/>
<param name="offset_z" type="double" value="$(arg _offset_z)"/>
<param name="offset_angle" type="double" value="$(arg _offset_angle)"/>
<param name="decelerationArea" type="double" value="$(arg _decelerationArea)"/>
<param name="stopArea" type="double" value="$(arg _stopArea)"/>
<param name="selfObstacle" type="double" value="$(arg _selfObstacle)"/>
</node>
<node
pkg = "simulation_m100"
type = "PathPlan"
name = "PathPlan_node_$(arg _uav_name)"
output = "screen"
respawn = "true"
launch-prefix= "xterm -e">
<param name="uav_name" type="string" value="$(arg _uav_name)"/>
</node>

<node
pkg = "simulation_m100"
type = "Location"
name = "Location_node_$(arg _uav_name)"
output = "screen"
respawn = "true"
launch-prefix= "xterm -e">
<param name="uav_name" type="string" value="$(arg _uav_name)"/>
<param name="uwb_serial_port" type="string" value="$(arg _uwb_serial_port)"/>
<param name="latitude" type="double" value="$(arg _latitude)"/>
<param name="longitude" type="double" value="$(arg _longitude)"/>
<param name="altitude" type="double" value="$(arg _altitude)"/>
<param name="offset_x" type="double" value="$(arg _offset_x)"/>
<param name="offset_y" type="double" value="$(arg _offset_y)"/>
<param name="offset_z" type="double" value="$(arg _offset_z)"/>
<param name="offset_angle" type="double" value="$(arg _offset_angle)"/>
</node>

<node
pkg = "simulation_m100"
type = "Formation"
name = "Formation_node_$(arg _uav_name)"
output = "screen"
respawn = "true"
launch-prefix= "xterm -e">
<param name="uav_id" type="int" value="$(arg _uav_id)"/>
<param name="uav_name" type="string" value="$(arg _uav_name)"/>
</node>

<!--<node
pkg = "simulation_m100"
type = "SwarmIntel"
name = "SwarmIntel_node_$(arg _uav_name)"
output = "screen"
respawn = "true"
launch-prefix= "xterm -e">
<param name="uav_id" type="int" value="$(arg _uav_id)"/>
<param name="uav_name" type="string" value="$(arg _uav_name)"/>
<param name="axis_id" type="int" value="$(arg _axis_id)"/>
</node>-->

<node
pkg = "simulation_m100"
type = "SIcooperativeSearch"
name = "SIcooperativeSearch_node_$(arg _uav_name)"
output = "screen"
respawn = "true"
launch-prefix= "xterm -e">
<param name="uav_id" type="int" value="$(arg _uav_id)"/>
<param name="uav_name" type="string" value="$(arg _uav_name)"/>
<param name="axis_id" type="int" value="$(arg _axis_id)"/>
</node>

<node
pkg = "simulation_m100"
type = "LocalDataPool"
name = "LocalDataPool_node_$(arg _uav_name)"
output = "screen"
respawn = "true"
launch-prefix= "xterm -e">
<param name="uav_name" type="string" value="$(arg _uav_name)"/>
<param name="axis_id" type="int" value="$(arg _axis_id)"/>
<param name="offset_x" type="double" value="$(arg _offset_x)"/>
<param name="offset_y" type="double" value="$(arg _offset_y)"/>
<param name="offset_z" type="double" value="$(arg _offset_z)"/>
<param name="offset_angle" type="double" value="$(arg _offset_angle)"/>
</node>

<node
pkg = "simulation_m100"
type = "RemoteDataPool"
name = "RemoteDataPool_node_$(arg _uav_name)"
output = "screen"
respawn = "true">
<param name="uav_id" type="int" value="$(arg _uav_id)"/>
<param name="uav_name" type="string" value="$(arg _uav_name)"/>
<param name="axis_id" type="int" value="$(arg _axis_id)"/>
</node>

<!--<node
pkg = "simulation_m100"
type = "RplidarScan"
name = "RplidarScan_node_$(arg _uav_name)"
output = "screen"
respawn = "true"
launch-prefix= "xterm -e">
<param name= "uav_name" type="string" value="$(arg _uav_name)"/>
</node>-->

</launch>