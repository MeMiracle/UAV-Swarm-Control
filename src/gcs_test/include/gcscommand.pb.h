// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcscommand.proto

#ifndef PROTOBUF_gcscommand_2eproto__INCLUDED
#define PROTOBUF_gcscommand_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace gcsCommand {
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class Twist;
class TwistDefaultTypeInternal;
extern TwistDefaultTypeInternal _Twist_default_instance_;
}  // namespace gcsCommand

namespace gcsCommand {

namespace protobuf_gcscommand_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_gcscommand_2eproto

// ===================================================================

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gcsCommand.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Empty* other);
  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const PROTOBUF_FINAL { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gcsCommand.Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_gcscommand_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Twist : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gcsCommand.Twist) */ {
 public:
  Twist();
  virtual ~Twist();

  Twist(const Twist& from);

  inline Twist& operator=(const Twist& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Twist(Twist&& from) noexcept
    : Twist() {
    *this = ::std::move(from);
  }

  inline Twist& operator=(Twist&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Twist& default_instance();

  static inline const Twist* internal_default_instance() {
    return reinterpret_cast<const Twist*>(
               &_Twist_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Twist* other);
  friend void swap(Twist& a, Twist& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Twist* New() const PROTOBUF_FINAL { return New(NULL); }

  Twist* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Twist& from);
  void MergeFrom(const Twist& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Twist* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double linear_x = 1;
  void clear_linear_x();
  static const int kLinearXFieldNumber = 1;
  double linear_x() const;
  void set_linear_x(double value);

  // double linear_y = 2;
  void clear_linear_y();
  static const int kLinearYFieldNumber = 2;
  double linear_y() const;
  void set_linear_y(double value);

  // double linear_z = 3;
  void clear_linear_z();
  static const int kLinearZFieldNumber = 3;
  double linear_z() const;
  void set_linear_z(double value);

  // double angular_x = 4;
  void clear_angular_x();
  static const int kAngularXFieldNumber = 4;
  double angular_x() const;
  void set_angular_x(double value);

  // double angular_y = 5;
  void clear_angular_y();
  static const int kAngularYFieldNumber = 5;
  double angular_y() const;
  void set_angular_y(double value);

  // double angular_z = 6;
  void clear_angular_z();
  static const int kAngularZFieldNumber = 6;
  double angular_z() const;
  void set_angular_z(double value);

  // @@protoc_insertion_point(class_scope:gcsCommand.Twist)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double linear_x_;
  double linear_y_;
  double linear_z_;
  double angular_x_;
  double angular_y_;
  double angular_z_;
  mutable int _cached_size_;
  friend struct protobuf_gcscommand_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Empty

// -------------------------------------------------------------------

// Twist

// double linear_x = 1;
inline void Twist::clear_linear_x() {
  linear_x_ = 0;
}
inline double Twist::linear_x() const {
  // @@protoc_insertion_point(field_get:gcsCommand.Twist.linear_x)
  return linear_x_;
}
inline void Twist::set_linear_x(double value) {
  
  linear_x_ = value;
  // @@protoc_insertion_point(field_set:gcsCommand.Twist.linear_x)
}

// double linear_y = 2;
inline void Twist::clear_linear_y() {
  linear_y_ = 0;
}
inline double Twist::linear_y() const {
  // @@protoc_insertion_point(field_get:gcsCommand.Twist.linear_y)
  return linear_y_;
}
inline void Twist::set_linear_y(double value) {
  
  linear_y_ = value;
  // @@protoc_insertion_point(field_set:gcsCommand.Twist.linear_y)
}

// double linear_z = 3;
inline void Twist::clear_linear_z() {
  linear_z_ = 0;
}
inline double Twist::linear_z() const {
  // @@protoc_insertion_point(field_get:gcsCommand.Twist.linear_z)
  return linear_z_;
}
inline void Twist::set_linear_z(double value) {
  
  linear_z_ = value;
  // @@protoc_insertion_point(field_set:gcsCommand.Twist.linear_z)
}

// double angular_x = 4;
inline void Twist::clear_angular_x() {
  angular_x_ = 0;
}
inline double Twist::angular_x() const {
  // @@protoc_insertion_point(field_get:gcsCommand.Twist.angular_x)
  return angular_x_;
}
inline void Twist::set_angular_x(double value) {
  
  angular_x_ = value;
  // @@protoc_insertion_point(field_set:gcsCommand.Twist.angular_x)
}

// double angular_y = 5;
inline void Twist::clear_angular_y() {
  angular_y_ = 0;
}
inline double Twist::angular_y() const {
  // @@protoc_insertion_point(field_get:gcsCommand.Twist.angular_y)
  return angular_y_;
}
inline void Twist::set_angular_y(double value) {
  
  angular_y_ = value;
  // @@protoc_insertion_point(field_set:gcsCommand.Twist.angular_y)
}

// double angular_z = 6;
inline void Twist::clear_angular_z() {
  angular_z_ = 0;
}
inline double Twist::angular_z() const {
  // @@protoc_insertion_point(field_get:gcsCommand.Twist.angular_z)
  return angular_z_;
}
inline void Twist::set_angular_z(double value) {
  
  angular_z_ = value;
  // @@protoc_insertion_point(field_set:gcsCommand.Twist.angular_z)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace gcsCommand

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gcscommand_2eproto__INCLUDED
