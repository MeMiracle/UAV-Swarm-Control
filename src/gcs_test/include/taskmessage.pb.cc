// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: taskmessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "taskmessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace myTaskMessage {
class MyPointDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MyPoint>
     _instance;
} _MyPoint_default_instance_;
class TaskMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TaskMessage>
     _instance;
} _TaskMessage_default_instance_;
class MissionMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MissionMessage>
     _instance;
} _MissionMessage_default_instance_;

namespace protobuf_taskmessage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyPoint, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyPoint, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyPoint, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyPoint, yaw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyPoint, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyPoint, mark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMessage, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMessage, clusterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMessage, kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MissionMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MissionMessage, uavids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MissionMessage, task_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(MyPoint)},
  { 11, -1, sizeof(TaskMessage)},
  { 19, -1, sizeof(MissionMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MyPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TaskMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MissionMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "taskmessage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _MyPoint_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MyPoint_default_instance_);_TaskMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TaskMessage_default_instance_);_MissionMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MissionMessage_default_instance_);_MissionMessage_default_instance_._instance.get_mutable()->task_ = const_cast< ::myTaskMessage::TaskMessage*>(
      ::myTaskMessage::TaskMessage::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021taskmessage.proto\022\rmyTaskMessage\"S\n\007My"
      "Point\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\022\013"
      "\n\003yaw\030\004 \001(\001\022\014\n\004type\030\005 \001(\r\022\014\n\004mark\030\006 \001(\r\""
      "U\n\013TaskMessage\022%\n\005point\030\001 \003(\0132\026.myTaskMe"
      "ssage.MyPoint\022\021\n\tclusterid\030\002 \001(\r\022\014\n\004kind"
      "\030\003 \001(\r\"J\n\016MissionMessage\022\016\n\006uavids\030\001 \003(\r"
      "\022(\n\004task\030\002 \001(\0132\032.myTaskMessage.TaskMessa"
      "geb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 290);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "taskmessage.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_taskmessage_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyPoint::kXFieldNumber;
const int MyPoint::kYFieldNumber;
const int MyPoint::kZFieldNumber;
const int MyPoint::kYawFieldNumber;
const int MyPoint::kTypeFieldNumber;
const int MyPoint::kMarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyPoint::MyPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_taskmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:myTaskMessage.MyPoint)
}
MyPoint::MyPoint(const MyPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&mark_) -
    reinterpret_cast<char*>(&x_)) + sizeof(mark_));
  // @@protoc_insertion_point(copy_constructor:myTaskMessage.MyPoint)
}

void MyPoint::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mark_) -
      reinterpret_cast<char*>(&x_)) + sizeof(mark_));
  _cached_size_ = 0;
}

MyPoint::~MyPoint() {
  // @@protoc_insertion_point(destructor:myTaskMessage.MyPoint)
  SharedDtor();
}

void MyPoint::SharedDtor() {
}

void MyPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyPoint::descriptor() {
  protobuf_taskmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taskmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MyPoint& MyPoint::default_instance() {
  protobuf_taskmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

MyPoint* MyPoint::New(::google::protobuf::Arena* arena) const {
  MyPoint* n = new MyPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:myTaskMessage.MyPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mark_) -
      reinterpret_cast<char*>(&x_)) + sizeof(mark_));
  _internal_metadata_.Clear();
}

bool MyPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myTaskMessage.MyPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yaw = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mark = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myTaskMessage.MyPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myTaskMessage.MyPoint)
  return false;
#undef DO_
}

void MyPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myTaskMessage.MyPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // double yaw = 4;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->yaw(), output);
  }

  // uint32 type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->type(), output);
  }

  // uint32 mark = 6;
  if (this->mark() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->mark(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:myTaskMessage.MyPoint)
}

::google::protobuf::uint8* MyPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:myTaskMessage.MyPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // double yaw = 4;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->yaw(), target);
  }

  // uint32 type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->type(), target);
  }

  // uint32 mark = 6;
  if (this->mark() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->mark(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myTaskMessage.MyPoint)
  return target;
}

size_t MyPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myTaskMessage.MyPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  // double yaw = 4;
  if (this->yaw() != 0) {
    total_size += 1 + 8;
  }

  // uint32 type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // uint32 mark = 6;
  if (this->mark() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mark());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myTaskMessage.MyPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const MyPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myTaskMessage.MyPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myTaskMessage.MyPoint)
    MergeFrom(*source);
  }
}

void MyPoint::MergeFrom(const MyPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myTaskMessage.MyPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.mark() != 0) {
    set_mark(from.mark());
  }
}

void MyPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myTaskMessage.MyPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyPoint::CopyFrom(const MyPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myTaskMessage.MyPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MyPoint::IsInitialized() const {
  return true;
}

void MyPoint::Swap(MyPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyPoint::InternalSwap(MyPoint* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(yaw_, other->yaw_);
  swap(type_, other->type_);
  swap(mark_, other->mark_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyPoint::GetMetadata() const {
  protobuf_taskmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taskmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyPoint

// double x = 1;
void MyPoint::clear_x() {
  x_ = 0;
}
double MyPoint::x() const {
  // @@protoc_insertion_point(field_get:myTaskMessage.MyPoint.x)
  return x_;
}
void MyPoint::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:myTaskMessage.MyPoint.x)
}

// double y = 2;
void MyPoint::clear_y() {
  y_ = 0;
}
double MyPoint::y() const {
  // @@protoc_insertion_point(field_get:myTaskMessage.MyPoint.y)
  return y_;
}
void MyPoint::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:myTaskMessage.MyPoint.y)
}

// double z = 3;
void MyPoint::clear_z() {
  z_ = 0;
}
double MyPoint::z() const {
  // @@protoc_insertion_point(field_get:myTaskMessage.MyPoint.z)
  return z_;
}
void MyPoint::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:myTaskMessage.MyPoint.z)
}

// double yaw = 4;
void MyPoint::clear_yaw() {
  yaw_ = 0;
}
double MyPoint::yaw() const {
  // @@protoc_insertion_point(field_get:myTaskMessage.MyPoint.yaw)
  return yaw_;
}
void MyPoint::set_yaw(double value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:myTaskMessage.MyPoint.yaw)
}

// uint32 type = 5;
void MyPoint::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 MyPoint::type() const {
  // @@protoc_insertion_point(field_get:myTaskMessage.MyPoint.type)
  return type_;
}
void MyPoint::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:myTaskMessage.MyPoint.type)
}

// uint32 mark = 6;
void MyPoint::clear_mark() {
  mark_ = 0u;
}
::google::protobuf::uint32 MyPoint::mark() const {
  // @@protoc_insertion_point(field_get:myTaskMessage.MyPoint.mark)
  return mark_;
}
void MyPoint::set_mark(::google::protobuf::uint32 value) {
  
  mark_ = value;
  // @@protoc_insertion_point(field_set:myTaskMessage.MyPoint.mark)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskMessage::kPointFieldNumber;
const int TaskMessage::kClusteridFieldNumber;
const int TaskMessage::kKindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskMessage::TaskMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_taskmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:myTaskMessage.TaskMessage)
}
TaskMessage::TaskMessage(const TaskMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      point_(from.point_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&clusterid_, &from.clusterid_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&clusterid_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:myTaskMessage.TaskMessage)
}

void TaskMessage::SharedCtor() {
  ::memset(&clusterid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&clusterid_)) + sizeof(kind_));
  _cached_size_ = 0;
}

TaskMessage::~TaskMessage() {
  // @@protoc_insertion_point(destructor:myTaskMessage.TaskMessage)
  SharedDtor();
}

void TaskMessage::SharedDtor() {
}

void TaskMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskMessage::descriptor() {
  protobuf_taskmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taskmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskMessage& TaskMessage::default_instance() {
  protobuf_taskmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

TaskMessage* TaskMessage::New(::google::protobuf::Arena* arena) const {
  TaskMessage* n = new TaskMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:myTaskMessage.TaskMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.Clear();
  ::memset(&clusterid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&clusterid_)) + sizeof(kind_));
  _internal_metadata_.Clear();
}

bool TaskMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myTaskMessage.TaskMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .myTaskMessage.MyPoint point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 clusterid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clusterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 kind = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myTaskMessage.TaskMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myTaskMessage.TaskMessage)
  return false;
#undef DO_
}

void TaskMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myTaskMessage.TaskMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .myTaskMessage.MyPoint point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->point(static_cast<int>(i)), output);
  }

  // uint32 clusterid = 2;
  if (this->clusterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->clusterid(), output);
  }

  // uint32 kind = 3;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->kind(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:myTaskMessage.TaskMessage)
}

::google::protobuf::uint8* TaskMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:myTaskMessage.TaskMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .myTaskMessage.MyPoint point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->point(static_cast<int>(i)), deterministic, target);
  }

  // uint32 clusterid = 2;
  if (this->clusterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->clusterid(), target);
  }

  // uint32 kind = 3;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->kind(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myTaskMessage.TaskMessage)
  return target;
}

size_t TaskMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myTaskMessage.TaskMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .myTaskMessage.MyPoint point = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->point(static_cast<int>(i)));
    }
  }

  // uint32 clusterid = 2;
  if (this->clusterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clusterid());
  }

  // uint32 kind = 3;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myTaskMessage.TaskMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myTaskMessage.TaskMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myTaskMessage.TaskMessage)
    MergeFrom(*source);
  }
}

void TaskMessage::MergeFrom(const TaskMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myTaskMessage.TaskMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
  if (from.clusterid() != 0) {
    set_clusterid(from.clusterid());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void TaskMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myTaskMessage.TaskMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskMessage::CopyFrom(const TaskMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myTaskMessage.TaskMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskMessage::IsInitialized() const {
  return true;
}

void TaskMessage::Swap(TaskMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskMessage::InternalSwap(TaskMessage* other) {
  using std::swap;
  point_.InternalSwap(&other->point_);
  swap(clusterid_, other->clusterid_);
  swap(kind_, other->kind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskMessage::GetMetadata() const {
  protobuf_taskmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taskmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskMessage

// repeated .myTaskMessage.MyPoint point = 1;
int TaskMessage::point_size() const {
  return point_.size();
}
void TaskMessage::clear_point() {
  point_.Clear();
}
const ::myTaskMessage::MyPoint& TaskMessage::point(int index) const {
  // @@protoc_insertion_point(field_get:myTaskMessage.TaskMessage.point)
  return point_.Get(index);
}
::myTaskMessage::MyPoint* TaskMessage::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:myTaskMessage.TaskMessage.point)
  return point_.Mutable(index);
}
::myTaskMessage::MyPoint* TaskMessage::add_point() {
  // @@protoc_insertion_point(field_add:myTaskMessage.TaskMessage.point)
  return point_.Add();
}
::google::protobuf::RepeatedPtrField< ::myTaskMessage::MyPoint >*
TaskMessage::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:myTaskMessage.TaskMessage.point)
  return &point_;
}
const ::google::protobuf::RepeatedPtrField< ::myTaskMessage::MyPoint >&
TaskMessage::point() const {
  // @@protoc_insertion_point(field_list:myTaskMessage.TaskMessage.point)
  return point_;
}

// uint32 clusterid = 2;
void TaskMessage::clear_clusterid() {
  clusterid_ = 0u;
}
::google::protobuf::uint32 TaskMessage::clusterid() const {
  // @@protoc_insertion_point(field_get:myTaskMessage.TaskMessage.clusterid)
  return clusterid_;
}
void TaskMessage::set_clusterid(::google::protobuf::uint32 value) {
  
  clusterid_ = value;
  // @@protoc_insertion_point(field_set:myTaskMessage.TaskMessage.clusterid)
}

// uint32 kind = 3;
void TaskMessage::clear_kind() {
  kind_ = 0u;
}
::google::protobuf::uint32 TaskMessage::kind() const {
  // @@protoc_insertion_point(field_get:myTaskMessage.TaskMessage.kind)
  return kind_;
}
void TaskMessage::set_kind(::google::protobuf::uint32 value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:myTaskMessage.TaskMessage.kind)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MissionMessage::kUavidsFieldNumber;
const int MissionMessage::kTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MissionMessage::MissionMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_taskmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:myTaskMessage.MissionMessage)
}
MissionMessage::MissionMessage(const MissionMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uavids_(from.uavids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_task()) {
    task_ = new ::myTaskMessage::TaskMessage(*from.task_);
  } else {
    task_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:myTaskMessage.MissionMessage)
}

void MissionMessage::SharedCtor() {
  task_ = NULL;
  _cached_size_ = 0;
}

MissionMessage::~MissionMessage() {
  // @@protoc_insertion_point(destructor:myTaskMessage.MissionMessage)
  SharedDtor();
}

void MissionMessage::SharedDtor() {
  if (this != internal_default_instance()) delete task_;
}

void MissionMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MissionMessage::descriptor() {
  protobuf_taskmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taskmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MissionMessage& MissionMessage::default_instance() {
  protobuf_taskmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

MissionMessage* MissionMessage::New(::google::protobuf::Arena* arena) const {
  MissionMessage* n = new MissionMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MissionMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:myTaskMessage.MissionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uavids_.Clear();
  if (GetArenaNoVirtual() == NULL && task_ != NULL) {
    delete task_;
  }
  task_ = NULL;
  _internal_metadata_.Clear();
}

bool MissionMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myTaskMessage.MissionMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 uavids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uavids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_uavids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .myTaskMessage.TaskMessage task = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myTaskMessage.MissionMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myTaskMessage.MissionMessage)
  return false;
#undef DO_
}

void MissionMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myTaskMessage.MissionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 uavids = 1;
  if (this->uavids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uavids_cached_byte_size_));
  }
  for (int i = 0, n = this->uavids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->uavids(i), output);
  }

  // .myTaskMessage.TaskMessage task = 2;
  if (this->has_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->task_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:myTaskMessage.MissionMessage)
}

::google::protobuf::uint8* MissionMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:myTaskMessage.MissionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 uavids = 1;
  if (this->uavids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _uavids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->uavids_, target);
  }

  // .myTaskMessage.TaskMessage task = 2;
  if (this->has_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->task_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myTaskMessage.MissionMessage)
  return target;
}

size_t MissionMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myTaskMessage.MissionMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 uavids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->uavids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uavids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .myTaskMessage.TaskMessage task = 2;
  if (this->has_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->task_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MissionMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myTaskMessage.MissionMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const MissionMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MissionMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myTaskMessage.MissionMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myTaskMessage.MissionMessage)
    MergeFrom(*source);
  }
}

void MissionMessage::MergeFrom(const MissionMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myTaskMessage.MissionMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uavids_.MergeFrom(from.uavids_);
  if (from.has_task()) {
    mutable_task()->::myTaskMessage::TaskMessage::MergeFrom(from.task());
  }
}

void MissionMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myTaskMessage.MissionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MissionMessage::CopyFrom(const MissionMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myTaskMessage.MissionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MissionMessage::IsInitialized() const {
  return true;
}

void MissionMessage::Swap(MissionMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MissionMessage::InternalSwap(MissionMessage* other) {
  using std::swap;
  uavids_.InternalSwap(&other->uavids_);
  swap(task_, other->task_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MissionMessage::GetMetadata() const {
  protobuf_taskmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taskmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MissionMessage

// repeated uint32 uavids = 1;
int MissionMessage::uavids_size() const {
  return uavids_.size();
}
void MissionMessage::clear_uavids() {
  uavids_.Clear();
}
::google::protobuf::uint32 MissionMessage::uavids(int index) const {
  // @@protoc_insertion_point(field_get:myTaskMessage.MissionMessage.uavids)
  return uavids_.Get(index);
}
void MissionMessage::set_uavids(int index, ::google::protobuf::uint32 value) {
  uavids_.Set(index, value);
  // @@protoc_insertion_point(field_set:myTaskMessage.MissionMessage.uavids)
}
void MissionMessage::add_uavids(::google::protobuf::uint32 value) {
  uavids_.Add(value);
  // @@protoc_insertion_point(field_add:myTaskMessage.MissionMessage.uavids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MissionMessage::uavids() const {
  // @@protoc_insertion_point(field_list:myTaskMessage.MissionMessage.uavids)
  return uavids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MissionMessage::mutable_uavids() {
  // @@protoc_insertion_point(field_mutable_list:myTaskMessage.MissionMessage.uavids)
  return &uavids_;
}

// .myTaskMessage.TaskMessage task = 2;
bool MissionMessage::has_task() const {
  return this != internal_default_instance() && task_ != NULL;
}
void MissionMessage::clear_task() {
  if (GetArenaNoVirtual() == NULL && task_ != NULL) delete task_;
  task_ = NULL;
}
const ::myTaskMessage::TaskMessage& MissionMessage::task() const {
  const ::myTaskMessage::TaskMessage* p = task_;
  // @@protoc_insertion_point(field_get:myTaskMessage.MissionMessage.task)
  return p != NULL ? *p : *reinterpret_cast<const ::myTaskMessage::TaskMessage*>(
      &::myTaskMessage::_TaskMessage_default_instance_);
}
::myTaskMessage::TaskMessage* MissionMessage::mutable_task() {
  
  if (task_ == NULL) {
    task_ = new ::myTaskMessage::TaskMessage;
  }
  // @@protoc_insertion_point(field_mutable:myTaskMessage.MissionMessage.task)
  return task_;
}
::myTaskMessage::TaskMessage* MissionMessage::release_task() {
  // @@protoc_insertion_point(field_release:myTaskMessage.MissionMessage.task)
  
  ::myTaskMessage::TaskMessage* temp = task_;
  task_ = NULL;
  return temp;
}
void MissionMessage::set_allocated_task(::myTaskMessage::TaskMessage* task) {
  delete task_;
  task_ = task;
  if (task) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:myTaskMessage.MissionMessage.task)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace myTaskMessage

// @@protoc_insertion_point(global_scope)
