// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uwblpsmessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "uwblpsmessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace uwblpsMessage {
class uwblpsMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<uwblpsMessage>
     _instance;
} _uwblpsMessage_default_instance_;
class positionMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<positionMessage>
     _instance;
} _positionMessage_default_instance_;

namespace protobuf_uwblpsmessage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(uwblpsMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(uwblpsMessage, linear_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(uwblpsMessage, linear_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(uwblpsMessage, linear_z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(positionMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(positionMessage, uavid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(positionMessage, clusterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(positionMessage, uwblpsmsg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(uwblpsMessage)},
  { 8, -1, sizeof(positionMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_uwblpsMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_positionMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "uwblpsmessage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _uwblpsMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_uwblpsMessage_default_instance_);_positionMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_positionMessage_default_instance_);_positionMessage_default_instance_._instance.get_mutable()->uwblpsmsg_ = const_cast< ::uwblpsMessage::uwblpsMessage*>(
      ::uwblpsMessage::uwblpsMessage::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023uwblpsmessage.proto\022\ruwblpsMessage\"E\n\r"
      "uwblpsMessage\022\020\n\010linear_x\030\001 \001(\001\022\020\n\010linea"
      "r_y\030\002 \001(\001\022\020\n\010linear_z\030\003 \001(\001\"d\n\017positionM"
      "essage\022\r\n\005uavid\030\001 \001(\r\022\021\n\tclusterid\030\002 \001(\r"
      "\022/\n\tuwblpsmsg\030\003 \001(\0132\034.uwblpsMessage.uwbl"
      "psMessageb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 217);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "uwblpsmessage.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_uwblpsmessage_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int uwblpsMessage::kLinearXFieldNumber;
const int uwblpsMessage::kLinearYFieldNumber;
const int uwblpsMessage::kLinearZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

uwblpsMessage::uwblpsMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_uwblpsmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:uwblpsMessage.uwblpsMessage)
}
uwblpsMessage::uwblpsMessage(const uwblpsMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&linear_x_, &from.linear_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&linear_z_) -
    reinterpret_cast<char*>(&linear_x_)) + sizeof(linear_z_));
  // @@protoc_insertion_point(copy_constructor:uwblpsMessage.uwblpsMessage)
}

void uwblpsMessage::SharedCtor() {
  ::memset(&linear_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&linear_z_) -
      reinterpret_cast<char*>(&linear_x_)) + sizeof(linear_z_));
  _cached_size_ = 0;
}

uwblpsMessage::~uwblpsMessage() {
  // @@protoc_insertion_point(destructor:uwblpsMessage.uwblpsMessage)
  SharedDtor();
}

void uwblpsMessage::SharedDtor() {
}

void uwblpsMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* uwblpsMessage::descriptor() {
  protobuf_uwblpsmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uwblpsmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const uwblpsMessage& uwblpsMessage::default_instance() {
  protobuf_uwblpsmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

uwblpsMessage* uwblpsMessage::New(::google::protobuf::Arena* arena) const {
  uwblpsMessage* n = new uwblpsMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void uwblpsMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:uwblpsMessage.uwblpsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&linear_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&linear_z_) -
      reinterpret_cast<char*>(&linear_x_)) + sizeof(linear_z_));
  _internal_metadata_.Clear();
}

bool uwblpsMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uwblpsMessage.uwblpsMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double linear_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &linear_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double linear_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &linear_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double linear_z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &linear_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uwblpsMessage.uwblpsMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uwblpsMessage.uwblpsMessage)
  return false;
#undef DO_
}

void uwblpsMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uwblpsMessage.uwblpsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double linear_x = 1;
  if (this->linear_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->linear_x(), output);
  }

  // double linear_y = 2;
  if (this->linear_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->linear_y(), output);
  }

  // double linear_z = 3;
  if (this->linear_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->linear_z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:uwblpsMessage.uwblpsMessage)
}

::google::protobuf::uint8* uwblpsMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:uwblpsMessage.uwblpsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double linear_x = 1;
  if (this->linear_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->linear_x(), target);
  }

  // double linear_y = 2;
  if (this->linear_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->linear_y(), target);
  }

  // double linear_z = 3;
  if (this->linear_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->linear_z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uwblpsMessage.uwblpsMessage)
  return target;
}

size_t uwblpsMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uwblpsMessage.uwblpsMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double linear_x = 1;
  if (this->linear_x() != 0) {
    total_size += 1 + 8;
  }

  // double linear_y = 2;
  if (this->linear_y() != 0) {
    total_size += 1 + 8;
  }

  // double linear_z = 3;
  if (this->linear_z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void uwblpsMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uwblpsMessage.uwblpsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const uwblpsMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const uwblpsMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uwblpsMessage.uwblpsMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uwblpsMessage.uwblpsMessage)
    MergeFrom(*source);
  }
}

void uwblpsMessage::MergeFrom(const uwblpsMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uwblpsMessage.uwblpsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.linear_x() != 0) {
    set_linear_x(from.linear_x());
  }
  if (from.linear_y() != 0) {
    set_linear_y(from.linear_y());
  }
  if (from.linear_z() != 0) {
    set_linear_z(from.linear_z());
  }
}

void uwblpsMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uwblpsMessage.uwblpsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void uwblpsMessage::CopyFrom(const uwblpsMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uwblpsMessage.uwblpsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool uwblpsMessage::IsInitialized() const {
  return true;
}

void uwblpsMessage::Swap(uwblpsMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void uwblpsMessage::InternalSwap(uwblpsMessage* other) {
  using std::swap;
  swap(linear_x_, other->linear_x_);
  swap(linear_y_, other->linear_y_);
  swap(linear_z_, other->linear_z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata uwblpsMessage::GetMetadata() const {
  protobuf_uwblpsmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uwblpsmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// uwblpsMessage

// double linear_x = 1;
void uwblpsMessage::clear_linear_x() {
  linear_x_ = 0;
}
double uwblpsMessage::linear_x() const {
  // @@protoc_insertion_point(field_get:uwblpsMessage.uwblpsMessage.linear_x)
  return linear_x_;
}
void uwblpsMessage::set_linear_x(double value) {
  
  linear_x_ = value;
  // @@protoc_insertion_point(field_set:uwblpsMessage.uwblpsMessage.linear_x)
}

// double linear_y = 2;
void uwblpsMessage::clear_linear_y() {
  linear_y_ = 0;
}
double uwblpsMessage::linear_y() const {
  // @@protoc_insertion_point(field_get:uwblpsMessage.uwblpsMessage.linear_y)
  return linear_y_;
}
void uwblpsMessage::set_linear_y(double value) {
  
  linear_y_ = value;
  // @@protoc_insertion_point(field_set:uwblpsMessage.uwblpsMessage.linear_y)
}

// double linear_z = 3;
void uwblpsMessage::clear_linear_z() {
  linear_z_ = 0;
}
double uwblpsMessage::linear_z() const {
  // @@protoc_insertion_point(field_get:uwblpsMessage.uwblpsMessage.linear_z)
  return linear_z_;
}
void uwblpsMessage::set_linear_z(double value) {
  
  linear_z_ = value;
  // @@protoc_insertion_point(field_set:uwblpsMessage.uwblpsMessage.linear_z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int positionMessage::kUavidFieldNumber;
const int positionMessage::kClusteridFieldNumber;
const int positionMessage::kUwblpsmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

positionMessage::positionMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_uwblpsmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:uwblpsMessage.positionMessage)
}
positionMessage::positionMessage(const positionMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uwblpsmsg()) {
    uwblpsmsg_ = new ::uwblpsMessage::uwblpsMessage(*from.uwblpsmsg_);
  } else {
    uwblpsmsg_ = NULL;
  }
  ::memcpy(&uavid_, &from.uavid_,
    static_cast<size_t>(reinterpret_cast<char*>(&clusterid_) -
    reinterpret_cast<char*>(&uavid_)) + sizeof(clusterid_));
  // @@protoc_insertion_point(copy_constructor:uwblpsMessage.positionMessage)
}

void positionMessage::SharedCtor() {
  ::memset(&uwblpsmsg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clusterid_) -
      reinterpret_cast<char*>(&uwblpsmsg_)) + sizeof(clusterid_));
  _cached_size_ = 0;
}

positionMessage::~positionMessage() {
  // @@protoc_insertion_point(destructor:uwblpsMessage.positionMessage)
  SharedDtor();
}

void positionMessage::SharedDtor() {
  if (this != internal_default_instance()) delete uwblpsmsg_;
}

void positionMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* positionMessage::descriptor() {
  protobuf_uwblpsmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uwblpsmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const positionMessage& positionMessage::default_instance() {
  protobuf_uwblpsmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

positionMessage* positionMessage::New(::google::protobuf::Arena* arena) const {
  positionMessage* n = new positionMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void positionMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:uwblpsMessage.positionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && uwblpsmsg_ != NULL) {
    delete uwblpsmsg_;
  }
  uwblpsmsg_ = NULL;
  ::memset(&uavid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clusterid_) -
      reinterpret_cast<char*>(&uavid_)) + sizeof(clusterid_));
  _internal_metadata_.Clear();
}

bool positionMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uwblpsMessage.positionMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uavid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uavid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 clusterid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clusterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .uwblpsMessage.uwblpsMessage uwblpsmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uwblpsmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uwblpsMessage.positionMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uwblpsMessage.positionMessage)
  return false;
#undef DO_
}

void positionMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uwblpsMessage.positionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uavid = 1;
  if (this->uavid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uavid(), output);
  }

  // uint32 clusterid = 2;
  if (this->clusterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->clusterid(), output);
  }

  // .uwblpsMessage.uwblpsMessage uwblpsmsg = 3;
  if (this->has_uwblpsmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->uwblpsmsg_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:uwblpsMessage.positionMessage)
}

::google::protobuf::uint8* positionMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:uwblpsMessage.positionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uavid = 1;
  if (this->uavid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uavid(), target);
  }

  // uint32 clusterid = 2;
  if (this->clusterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->clusterid(), target);
  }

  // .uwblpsMessage.uwblpsMessage uwblpsmsg = 3;
  if (this->has_uwblpsmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->uwblpsmsg_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uwblpsMessage.positionMessage)
  return target;
}

size_t positionMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uwblpsMessage.positionMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .uwblpsMessage.uwblpsMessage uwblpsmsg = 3;
  if (this->has_uwblpsmsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->uwblpsmsg_);
  }

  // uint32 uavid = 1;
  if (this->uavid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uavid());
  }

  // uint32 clusterid = 2;
  if (this->clusterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clusterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void positionMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uwblpsMessage.positionMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const positionMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const positionMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uwblpsMessage.positionMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uwblpsMessage.positionMessage)
    MergeFrom(*source);
  }
}

void positionMessage::MergeFrom(const positionMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uwblpsMessage.positionMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uwblpsmsg()) {
    mutable_uwblpsmsg()->::uwblpsMessage::uwblpsMessage::MergeFrom(from.uwblpsmsg());
  }
  if (from.uavid() != 0) {
    set_uavid(from.uavid());
  }
  if (from.clusterid() != 0) {
    set_clusterid(from.clusterid());
  }
}

void positionMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uwblpsMessage.positionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void positionMessage::CopyFrom(const positionMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uwblpsMessage.positionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool positionMessage::IsInitialized() const {
  return true;
}

void positionMessage::Swap(positionMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void positionMessage::InternalSwap(positionMessage* other) {
  using std::swap;
  swap(uwblpsmsg_, other->uwblpsmsg_);
  swap(uavid_, other->uavid_);
  swap(clusterid_, other->clusterid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata positionMessage::GetMetadata() const {
  protobuf_uwblpsmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uwblpsmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// positionMessage

// uint32 uavid = 1;
void positionMessage::clear_uavid() {
  uavid_ = 0u;
}
::google::protobuf::uint32 positionMessage::uavid() const {
  // @@protoc_insertion_point(field_get:uwblpsMessage.positionMessage.uavid)
  return uavid_;
}
void positionMessage::set_uavid(::google::protobuf::uint32 value) {
  
  uavid_ = value;
  // @@protoc_insertion_point(field_set:uwblpsMessage.positionMessage.uavid)
}

// uint32 clusterid = 2;
void positionMessage::clear_clusterid() {
  clusterid_ = 0u;
}
::google::protobuf::uint32 positionMessage::clusterid() const {
  // @@protoc_insertion_point(field_get:uwblpsMessage.positionMessage.clusterid)
  return clusterid_;
}
void positionMessage::set_clusterid(::google::protobuf::uint32 value) {
  
  clusterid_ = value;
  // @@protoc_insertion_point(field_set:uwblpsMessage.positionMessage.clusterid)
}

// .uwblpsMessage.uwblpsMessage uwblpsmsg = 3;
bool positionMessage::has_uwblpsmsg() const {
  return this != internal_default_instance() && uwblpsmsg_ != NULL;
}
void positionMessage::clear_uwblpsmsg() {
  if (GetArenaNoVirtual() == NULL && uwblpsmsg_ != NULL) delete uwblpsmsg_;
  uwblpsmsg_ = NULL;
}
const ::uwblpsMessage::uwblpsMessage& positionMessage::uwblpsmsg() const {
  const ::uwblpsMessage::uwblpsMessage* p = uwblpsmsg_;
  // @@protoc_insertion_point(field_get:uwblpsMessage.positionMessage.uwblpsmsg)
  return p != NULL ? *p : *reinterpret_cast<const ::uwblpsMessage::uwblpsMessage*>(
      &::uwblpsMessage::_uwblpsMessage_default_instance_);
}
::uwblpsMessage::uwblpsMessage* positionMessage::mutable_uwblpsmsg() {
  
  if (uwblpsmsg_ == NULL) {
    uwblpsmsg_ = new ::uwblpsMessage::uwblpsMessage;
  }
  // @@protoc_insertion_point(field_mutable:uwblpsMessage.positionMessage.uwblpsmsg)
  return uwblpsmsg_;
}
::uwblpsMessage::uwblpsMessage* positionMessage::release_uwblpsmsg() {
  // @@protoc_insertion_point(field_release:uwblpsMessage.positionMessage.uwblpsmsg)
  
  ::uwblpsMessage::uwblpsMessage* temp = uwblpsmsg_;
  uwblpsmsg_ = NULL;
  return temp;
}
void positionMessage::set_allocated_uwblpsmsg(::uwblpsMessage::uwblpsMessage* uwblpsmsg) {
  delete uwblpsmsg_;
  uwblpsmsg_ = uwblpsmsg;
  if (uwblpsmsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:uwblpsMessage.positionMessage.uwblpsmsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace uwblpsMessage

// @@protoc_insertion_point(global_scope)
